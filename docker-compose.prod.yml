version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: simdeviceplatform_postgres_prod
    environment:
      POSTGRES_DB: simdeviceplatform
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/Data/Scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - simdeviceplatform_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: simdeviceplatform_redis_prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - simdeviceplatform_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # .NET Core API Backend
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: simdeviceplatform_api_prod
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=simdeviceplatform;Username=${POSTGRES_USER:-postgres};Password=${POSTGRES_PASSWORD:-changeme}
      - Jwt__Key=${JWT_KEY:-your-super-secret-key-with-at-least-32-characters}
      - Jwt__Issuer=${JWT_ISSUER:-https://simdeviceplatform.com}
      - Jwt__Audience=${JWT_AUDIENCE:-https://simdeviceplatform.com}
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - simdeviceplatform_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/reconcile/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: simdeviceplatform_frontend_prod
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:5000}
    ports:
      - "3000:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - simdeviceplatform_network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: simdeviceplatform_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - api
      - frontend
    networks:
      - simdeviceplatform_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  simdeviceplatform_network:
    driver: bridge